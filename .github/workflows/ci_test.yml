name: CI/CD Pipeline docker_test branch

on:
  push:
    branches:
      - '**'

env:
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11.3'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
          sudo apt-get update && sudo apt-get install -y libimage-exiftool-perl

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        run: pytest

  deploy-container-to-kube-and-run-tests:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3


      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Run tests in Docker
        run: docker run $IMAGE_NAME:$IMAGE_TAG pytest

      - name: Set up Kind
        uses: helm/kind-action@v1
        with:
          wait: 30s

      - name: Load Docker image into Kind
        run: kind load docker-image $IMAGE_NAME:$IMAGE_TAG

      - name: Create a Kubernetes Deployment
        run: kubectl create deployment transfer_wizard --image=$IMAGE_NAME:$IMAGE_TAG

      - name: Expose the Deployment as a Service
        run: kubectl expose deployment transfer_wizard --port=8080 --type=NodePort

      - name: Wait for pod to be ready
        run: kubectl rollout status deployment/transfer_wizard

      - name: Run tests in Kubernetes
        run: kubectl exec -it $(kubectl get pods --selector=app=transfer_wizard -o jsonpath='{.items[0].metadata.name}') -- pytest

      - name: Clean up Kubernetes resources
        run: |
          kubectl delete deployment transfer_wizard
          kubectl delete service transfer_wizard
